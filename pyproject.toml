[tool.poetry]
name = "cisco_acl"
version = "3.2.4"
description = "Python package to parse and manage Cisco ACL (Access Control List)"
authors = ["Vladimirs Prusakovs <vladimir.prusakovs@gmail.com>"]
readme = "README.rst"
license = "Apache-2.0"
homepage = "https://github.com/vladimirs-git/cisco-acl"
repository = "https://github.com/vladimirs-git/cisco-acl"
keywords = ["cisco", "acl", "ios", "nexus", "nx-os"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: System :: Networking",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Natural Language :: English",
]

[tool.poetry.dependencies]
python = "^3.8"
netports = "^0.12.1"

[tool.poetry.group.dev.dependencies]
dictdiffer = "^0.9.0"
mypy = "^1.8.0"
pygments = "^2.16.1"
pylint = "^3.0.3"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
restructuredtext-lint = "^1.4.0"
ruff = "^0.1.6"
twine = "^4.0.2"
types-tabulate = "^0.9.0.3"
typing-extensions = "^4.8.0"
vhelpers = "^0.1.14"

[tool.poetry.extras]
test = ["pytest"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/vladimirs-git/cisco-acl/issues"
"Download URL" = "https://github.com/vladimirs-git/cisco-acl/archive/refs/tags/3.2.4.tar.gz"

[tool.pylint]
max-line-length = 100

[tool.pylint.message_control]
max-args = 10
max-attributes = 13
max-returns=10
disable = [
    "unnecessary-dunder-call",
    "fixme",
]

[tool.pylint."examples.*"]
disable = [
    "invalid-name",
]

[tool.pylint."tests.*"]
disable = [
    "duplicate-code",
    "protected-access",
    "redefined-outer-name",
    "too-few-public-methods",
    "too-many-locals",
    "too-many-public-methods",
    "unsubscriptable-object",
    "unused-import",
    "use-dict-literal",
]

[tool.mypy]
python_version = "3.8"

[tool.ruff]
exclude = [
    ".git",
    ".idea",
    ".mypy_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "_notes",
    "dist",
    "examples",
    "temp",
    "tmp",
    "venv",
]
line-length = 100
indent-width = 4
target-version = "py38"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false  # arguments on separate lines
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "pep257"  # docstring style

[tool.setuptools.package-data]
cisco_acl = ["py.typed"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
