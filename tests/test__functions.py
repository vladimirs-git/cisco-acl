"""unittest functions.py"""
# pylint: disable=too-many-lines
import unittest
from ipaddress import IPv4Network

import dictdiffer  # type: ignore

from cisco_acl import functions as f
from tests.helpers_test import (
    DENY_IP,
    PERMIT_IP,
    REMARK,
)

IOS_ADDGR_CFG = """
hostname HOSTNAME

object-group network AG_NAME
  description TEXT
  host 10.0.0.1
  10.0.0.0 255.255.255.252
"""
IOS_ACL_EXT_CFG = """
hostname HOSTNAME

object-group network AG_NAME
  host 10.0.0.1
  
ip access-list extended ACL_NAME1
  remark === C-1
  permit tcp 10.0.0.1 0.0.0.0 eq 1 10.0.0.0 0.0.0.3 eq 2
  remark === C-2
  deny ip object-group AG_NAME any
  
interface Ethernet1/1
  ip access-group ACL_NAME1 in
"""

IOS_ACL_STD_CFG = """
hostname HOSTNAME

ip access-list standard ACL_NAME2
  remark === C-11
  permit host 10.0.0.1
  remark === C-12
  permit 10.0.0.0 0.0.0.3

interface Ethernet1/2
  ip access-group ACL_NAME2 in
  ip access-group ACL_NAME2 out
"""

CNX_ACL_EXT_CFG = """
hostname HOSTNAME

object-group ip address AG_NAME
  10 host 10.0.0.1

ip access-list ACL_NAME1
  statistics per-entry
  10 remark === C-1
  20 permit tcp 10.0.0.1/32 eq 1 10.0.0.0/8 eq 2
  30 remark === C-2
  40 deny ip addrgroup AG_NAME any

interface Ethernet1/1
  ip access-group ACL_NAME1 in
"""

IOS_ADDGR_D = [
    dict(line="object-group network AG_NAME\n  host 10.0.0.1\n  10.0.0.0 255.255.255.252",
         platform="ios",
         note="",
         indent="  ",
         name="AG_NAME",
         items=[
             dict(line="host 10.0.0.1",
                  platform="ios",
                  items=[],
                  note="",
                  max_ncwb=16,
                  sequence=0,
                  type="host",
                  addrgroup="",
                  ipnet=IPv4Network("10.0.0.1/32"),
                  prefix="10.0.0.1/32",
                  subnet="10.0.0.1 255.255.255.255",
                  wildcard="10.0.0.1 0.0.0.0"),
             dict(line="10.0.0.0 255.255.255.252",
                  platform="ios",
                  items=[],
                  note="",
                  max_ncwb=16,
                  sequence=0,
                  type="subnet",
                  addrgroup="",
                  ipnet=IPv4Network("10.0.0.0/30"),
                  prefix="10.0.0.0/30",
                  subnet="10.0.0.0 255.255.255.252",
                  wildcard="10.0.0.0 0.0.0.3"),
         ])
]
# noinspection DuplicatedCode
CNX_ACE_EXT_D = dict(
    line="ip access-list ACL_NAME1\n"
         "  10 remark === C-1\n"
         "  20 permit tcp 10.0.0.1/32 eq 1 10.0.0.0/8 eq 2\n"
         "  30 remark === C-2\n"
         "  40 deny ip addrgroup AG_NAME any",
    platform="nxos",
    type="extended",
    input=["interface Ethernet1/1"],
    output=[],
    group_by="",
    note="",
    max_ncwb=16,
    indent="  ",
    protocol_nr=False,
    port_nr=False,
    name="ACL_NAME1",
    items=[
        dict(line="10 remark === C-1",
             platform="nxos",
             note="",
             sequence=10,
             action="remark",
             text="=== C-1"),
        dict(line="20 permit tcp 10.0.0.1/32 eq 1 10.0.0.0/8 eq 2",
             platform="nxos",
             type="extended",
             note="",
             max_ncwb=16,
             protocol_nr=False,
             port_nr=False,
             sequence=20,
             action="permit",
             protocol=dict(line="tcp",
                           platform="nxos",
                           note="",
                           protocol_nr=False,
                           has_port=True,
                           name="tcp",
                           number=6),
             srcaddr=dict(line="10.0.0.1/32",
                          platform="nxos",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="prefix",
                          addrgroup="",
                          ipnet=IPv4Network("10.0.0.1/32"),
                          prefix="10.0.0.1/32",
                          subnet="10.0.0.1 255.255.255.255",
                          wildcard="10.0.0.1 0.0.0.0"),
             srcport=dict(line="eq 1",
                          platform="nxos",
                          note="",
                          protocol="tcp",
                          port_nr=False,
                          items=[1],
                          operator="eq",
                          ports=[1],
                          sport="1"),
             dstaddr=dict(line="10.0.0.0/8",
                          platform="nxos",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="prefix",
                          addrgroup="",
                          ipnet=IPv4Network("10.0.0.0/8"),
                          prefix="10.0.0.0/8",
                          subnet="10.0.0.0 255.0.0.0",
                          wildcard="10.0.0.0 0.255.255.255"),
             dstport=dict(line="eq 2",
                          platform="nxos",
                          note="",
                          protocol="tcp",
                          port_nr=False,
                          items=[2],
                          operator="eq",
                          ports=[2],
                          sport="2"),
             option=dict(line="", platform="nxos", note="", flags=[], logs=[])),
        dict(line="30 remark === C-2",
             platform="nxos",
             note="",
             sequence=30,
             action="remark",
             text="=== C-2"),
        dict(line="40 deny ip addrgroup AG_NAME any",
             platform="nxos",
             type="extended",
             note="",
             max_ncwb=16,
             protocol_nr=False,
             port_nr=False,
             sequence=40,
             action="deny",
             protocol=dict(line="ip",
                           platform="nxos",
                           note="",
                           protocol_nr=False,
                           has_port=False,
                           name="ip",
                           number=0),
             srcaddr=dict(line="addrgroup AG_NAME",
                          platform="nxos",
                          items=[
                              dict(line="host 10.0.0.1",
                                   platform="nxos",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="host",
                                   addrgroup="",
                                   ipnet=IPv4Network("10.0.0.1/32"),
                                   prefix="10.0.0.1/32",
                                   subnet="10.0.0.1 255.255.255.255",
                                   wildcard="10.0.0.1 0.0.0.0"),
                          ],
                          note="",
                          max_ncwb=16,
                          type="addrgroup",
                          addrgroup="AG_NAME",
                          ipnet=None,
                          prefix="",
                          subnet="",
                          wildcard=""),
             srcport=dict(line="",
                          platform="nxos",
                          note="",
                          protocol="",
                          port_nr=False,
                          items=[],
                          operator="",
                          ports=[],
                          sport=""),
             dstaddr=dict(line="any",
                          platform="nxos",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="any",
                          addrgroup="",
                          ipnet=IPv4Network("0.0.0.0/0"),
                          prefix="0.0.0.0/0",
                          subnet="0.0.0.0 0.0.0.0",
                          wildcard="0.0.0.0 255.255.255.255"),
             dstport=dict(line="",
                          platform="nxos",
                          note="",
                          protocol="",
                          port_nr=False,
                          items=[],
                          operator="",
                          ports=[],
                          sport=""),
             option=dict(line="", platform="nxos", note="", flags=[], logs=[])),
    ]
)

# noinspection DuplicatedCode
CNX_ACEG_EXT_D = dict(
    line="ip access-list ACL_NAME1\n"
         "  10 remark === C-1\n"
         "  20 permit tcp 10.0.0.1/32 eq 1 10.0.0.0/8 eq 2\n"
         "  30 remark === C-2\n"
         "  40 deny ip addrgroup AG_NAME any",
    platform="nxos",
    type="extended",
    input=["interface Ethernet1/1"],
    output=[],
    name="ACL_NAME1",
    items=[
        dict(line="10 remark === C-1\n20 permit tcp 10.0.0.1/32 eq 1 10.0.0.0/8 eq 2",
             platform="nxos",
             type="extended",
             name="=== C-1",
             items=[
                 dict(line="10 remark === C-1",
                      platform="nxos",
                      note="",
                      sequence=10,
                      action="remark",
                      text="=== C-1"),
                 dict(line="20 permit tcp 10.0.0.1/32 eq 1 10.0.0.0/8 eq 2",
                      platform="nxos",
                      type="extended",
                      note="",
                      max_ncwb=16,
                      protocol_nr=False,
                      port_nr=False,
                      sequence=20,
                      action="permit",
                      protocol=dict(line="tcp",
                                    platform="nxos",
                                    note="",
                                    protocol_nr=False,
                                    has_port=True,
                                    name="tcp",
                                    number=6),
                      srcaddr=dict(line="10.0.0.1/32",
                                   platform="nxos",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="prefix",
                                   addrgroup="",
                                   ipnet=IPv4Network("10.0.0.1/32"),
                                   prefix="10.0.0.1/32",
                                   subnet="10.0.0.1 255.255.255.255",
                                   wildcard="10.0.0.1 0.0.0.0"),
                      srcport=dict(line="eq 1",
                                   platform="nxos",
                                   note="",
                                   protocol="tcp",
                                   port_nr=False,
                                   items=[1],
                                   operator="eq",
                                   ports=[1],
                                   sport="1"),
                      dstaddr=dict(line="10.0.0.0/8",
                                   platform="nxos",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="prefix",
                                   addrgroup="",
                                   ipnet=IPv4Network("10.0.0.0/8"),
                                   prefix="10.0.0.0/8",
                                   subnet="10.0.0.0 255.0.0.0",
                                   wildcard="10.0.0.0 0.255.255.255"),
                      dstport=dict(line="eq 2",
                                   platform="nxos",
                                   note="",
                                   protocol="tcp",
                                   port_nr=False,
                                   items=[2],
                                   operator="eq",
                                   ports=[2],
                                   sport="2"),
                      option=dict(line="",
                                  platform="nxos",
                                  note="",
                                  flags=[],
                                  logs=[]))],
             group_by="=== ",
             note="",
             protocol_nr=False,
             port_nr=False,
             sequence=0),
        dict(line="30 remark === C-2\n40 deny ip addrgroup AG_NAME any",
             platform="nxos",
             type="extended",
             name="=== C-2",
             items=[
                 dict(line="30 remark === C-2",
                      platform="nxos",
                      note="",
                      sequence=30,
                      action="remark",
                      text="=== C-2"),
                 dict(line="40 deny ip addrgroup AG_NAME any",
                      platform="nxos",
                      type="extended",
                      note="",
                      max_ncwb=16,
                      protocol_nr=False,
                      port_nr=False,
                      sequence=40,
                      action="deny",
                      protocol=dict(line="ip",
                                    platform="nxos",
                                    note="",
                                    protocol_nr=False,
                                    has_port=False,
                                    name="ip",
                                    number=0),
                      srcaddr=dict(line="addrgroup AG_NAME",
                                   platform="nxos",
                                   items=[
                                       dict(line="host 10.0.0.1",
                                            platform="nxos",
                                            items=[],
                                            note="",
                                            max_ncwb=16,
                                            type="host",
                                            addrgroup="",
                                            ipnet=IPv4Network("10.0.0.1/32"),
                                            prefix="10.0.0.1/32",
                                            subnet="10.0.0.1 255.255.255.255",
                                            wildcard="10.0.0.1 0.0.0.0")],
                                   note="",
                                   max_ncwb=16,
                                   type="addrgroup",
                                   addrgroup="AG_NAME",
                                   ipnet=None,
                                   prefix="",
                                   subnet="",
                                   wildcard=""),
                      srcport=dict(line="",
                                   platform="nxos",
                                   note="",
                                   protocol="",
                                   port_nr=False,
                                   items=[],
                                   operator="",
                                   ports=[],
                                   sport=""),
                      dstaddr=dict(line="any",
                                   platform="nxos",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="any",
                                   addrgroup="",
                                   ipnet=IPv4Network("0.0.0.0/0"),
                                   prefix="0.0.0.0/0",
                                   subnet="0.0.0.0 0.0.0.0",
                                   wildcard="0.0.0.0 255.255.255.255"),
                      dstport=dict(line="",
                                   platform="nxos",
                                   note="",
                                   protocol="",
                                   port_nr=False,
                                   items=[],
                                   operator="",
                                   ports=[],
                                   sport=""),
                      option=dict(line="",
                                  platform="nxos",
                                  note="",
                                  flags=[],
                                  logs=[]))],
             group_by="=== ",
             note="",
             protocol_nr=False,
             port_nr=False,
             sequence=0),
    ],
    group_by="=== ",
    note="",
    max_ncwb=16,
    indent="  ",
    protocol_nr=False,
    port_nr=False,
)
# noinspection DuplicatedCode
IOS_ACE_EXT_D = dict(
    line="ip access-list extended ACL_NAME1\n"
         "  remark === C-1\n"
         "  permit tcp 10.0.0.1 0.0.0.0 eq 1 10.0.0.0 0.0.0.3 eq 2\n"
         "  remark === C-2\n"
         "  deny ip object-group AG_NAME any",
    platform="ios",
    type="extended",
    input=["interface Ethernet1/1"],
    output=[],
    note="",
    max_ncwb=16,
    indent="  ",
    protocol_nr=False,
    port_nr=False,
    name="ACL_NAME1",
    group_by="",
    items=[
        dict(line="remark === C-1",
             platform="ios",
             note="",
             sequence=0,
             action="remark",
             text="=== C-1"),
        dict(line="permit tcp 10.0.0.1 0.0.0.0 eq 1 10.0.0.0 0.0.0.3 eq 2",
             platform="ios",
             type="extended",
             note="",
             max_ncwb=16,
             protocol_nr=False,
             port_nr=False,
             sequence=0,
             action="permit",
             protocol=dict(line="tcp",
                           platform="ios",
                           note="",
                           protocol_nr=False,
                           has_port=True,
                           name="tcp",
                           number=6),
             srcaddr=dict(line="10.0.0.1 0.0.0.0",
                          platform="ios",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="wildcard",
                          addrgroup="",
                          ipnet=IPv4Network("10.0.0.1/32"),
                          prefix="10.0.0.1/32",
                          subnet="10.0.0.1 255.255.255.255",
                          wildcard="10.0.0.1 0.0.0.0"),
             srcport=dict(line="eq 1",
                          platform="ios",
                          note="",
                          protocol="tcp",
                          port_nr=False,
                          items=[1],
                          operator="eq",
                          ports=[1],
                          sport="1"),
             dstaddr=dict(line="10.0.0.0 0.0.0.3",
                          platform="ios",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="wildcard",
                          addrgroup="",
                          ipnet=IPv4Network("10.0.0.0/30"),
                          prefix="10.0.0.0/30",
                          subnet="10.0.0.0 255.255.255.252",
                          wildcard="10.0.0.0 0.0.0.3"),
             dstport=dict(line="eq 2",
                          platform="ios",
                          note="",
                          protocol="tcp",
                          port_nr=False,
                          items=[2],
                          operator="eq",
                          ports=[2],
                          sport="2"),
             option=dict(line="", platform="ios", note="", flags=[], logs=[])),
        dict(line="remark === C-2",
             platform="ios",
             note="",
             sequence=0,
             action="remark",
             text="=== C-2"),
        dict(line="deny ip object-group AG_NAME any",
             platform="ios",
             type="extended",
             note="",
             max_ncwb=16,
             protocol_nr=False,
             port_nr=False,
             sequence=0,
             action="deny",
             protocol=dict(line="ip",
                           platform="ios",
                           note="",
                           protocol_nr=False,
                           has_port=False,
                           name="ip",
                           number=0),
             srcaddr=dict(line="object-group AG_NAME",
                          platform="ios",
                          items=[
                              dict(line="host 10.0.0.1",
                                   platform="ios",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="host",
                                   addrgroup="",
                                   ipnet=IPv4Network("10.0.0.1/32"),
                                   prefix="10.0.0.1/32",
                                   subnet="10.0.0.1 255.255.255.255",
                                   wildcard="10.0.0.1 0.0.0.0"),
                          ],
                          note="",
                          max_ncwb=16,
                          type="addrgroup",
                          addrgroup="AG_NAME",
                          ipnet=None,
                          prefix="",
                          subnet="",
                          wildcard=""),
             srcport=dict(line="",
                          platform="ios",
                          note="",
                          protocol="",
                          port_nr=False,
                          items=[],
                          operator="",
                          ports=[],
                          sport=""),
             dstaddr=dict(line="any",
                          platform="ios",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="any",
                          addrgroup="",
                          ipnet=IPv4Network("0.0.0.0/0"),
                          prefix="0.0.0.0/0",
                          subnet="0.0.0.0 0.0.0.0",
                          wildcard="0.0.0.0 255.255.255.255"),
             dstport=dict(line="",
                          platform="ios",
                          note="",
                          protocol="",
                          port_nr=False,
                          items=[],
                          operator="",
                          ports=[],
                          sport=""),
             option=dict(line="", platform="ios", note="", flags=[], logs=[]))
    ]
)
# noinspection DuplicatedCode
IOS_ACEG_EXT_D = dict(
    line="ip access-list extended ACL_NAME1\n"
         "  remark === C-1\n"
         "  permit tcp 10.0.0.1 0.0.0.0 eq 1 10.0.0.0 0.0.0.3 eq 2\n"
         "  remark === C-2\n"
         "  deny ip object-group AG_NAME any",
    platform="ios",
    type="extended",
    input=["interface Ethernet1/1"],
    output=[],
    name="ACL_NAME1",
    items=[
        dict(line="remark === C-1\npermit tcp 10.0.0.1 0.0.0.0 eq 1 10.0.0.0 0.0.0.3 eq 2",
             platform="ios",
             type="extended",
             name="=== C-1",
             items=[
                 dict(line="remark === C-1",
                      platform="ios",
                      note="",
                      sequence=0,
                      action="remark",
                      text="=== C-1"),
                 dict(line="permit tcp 10.0.0.1 0.0.0.0 eq 1 10.0.0.0 0.0.0.3 eq 2",
                      platform="ios",
                      type="extended",
                      note="",
                      max_ncwb=16,
                      protocol_nr=False,
                      port_nr=False,
                      sequence=0,
                      action="permit",
                      protocol=dict(line="tcp",
                                    platform="ios",
                                    note="",
                                    protocol_nr=False,
                                    has_port=True,
                                    name="tcp",
                                    number=6),
                      srcaddr=dict(line="10.0.0.1 0.0.0.0",
                                   platform="ios",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="wildcard",
                                   addrgroup="",
                                   ipnet=IPv4Network("10.0.0.1/32"),
                                   prefix="10.0.0.1/32",
                                   subnet="10.0.0.1 255.255.255.255",
                                   wildcard="10.0.0.1 0.0.0.0"),
                      srcport=dict(line="eq 1",
                                   platform="ios",
                                   note="",
                                   protocol="tcp",
                                   port_nr=False,
                                   items=[1],
                                   operator="eq",
                                   ports=[1],
                                   sport="1"),
                      dstaddr=dict(line="10.0.0.0 0.0.0.3",
                                   platform="ios",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="wildcard",
                                   addrgroup="",
                                   ipnet=IPv4Network("10.0.0.0/30"),
                                   prefix="10.0.0.0/30",
                                   subnet="10.0.0.0 255.255.255.252",
                                   wildcard="10.0.0.0 0.0.0.3"),
                      dstport=dict(line="eq 2",
                                   platform="ios",
                                   note="",
                                   protocol="tcp",
                                   port_nr=False,
                                   items=[2],
                                   operator="eq",
                                   ports=[2],
                                   sport="2"),
                      option=dict(line="",
                                  platform="ios",
                                  note="",
                                  flags=[],
                                  logs=[]),
                      ),
             ],
             group_by="=== ",
             note="",
             protocol_nr=False,
             port_nr=False,
             sequence=0),
        dict(line="remark === C-2\ndeny ip object-group AG_NAME any",
             platform="ios",
             type="extended",
             name="=== C-2",
             items=[
                 dict(line="remark === C-2",
                      platform="ios",
                      note="",
                      sequence=0,
                      action="remark",
                      text="=== C-2"),
                 dict(line="deny ip object-group AG_NAME any",
                      platform="ios",
                      type="extended",
                      note="",
                      max_ncwb=16,
                      protocol_nr=False,
                      port_nr=False,
                      sequence=0,
                      action="deny",
                      protocol=dict(line="ip",
                                    platform="ios",
                                    note="",
                                    protocol_nr=False,
                                    has_port=False,
                                    name="ip",
                                    number=0),
                      srcaddr=dict(line="object-group AG_NAME",
                                   platform="ios",
                                   items=[
                                       dict(line="host 10.0.0.1",
                                            platform="ios",
                                            items=[],
                                            note="",
                                            max_ncwb=16,
                                            type="host",
                                            addrgroup="",
                                            ipnet=IPv4Network("10.0.0.1/32"),
                                            prefix="10.0.0.1/32",
                                            subnet="10.0.0.1 255.255.255.255",
                                            wildcard="10.0.0.1 0.0.0.0"),
                                   ],
                                   note="",
                                   max_ncwb=16,
                                   type="addrgroup",
                                   addrgroup="AG_NAME",
                                   ipnet=None,
                                   prefix="",
                                   subnet="",
                                   wildcard=""),
                      srcport=dict(line="",
                                   platform="ios",
                                   note="",
                                   protocol="",
                                   port_nr=False,
                                   items=[],
                                   operator="",
                                   ports=[],
                                   sport=""),
                      dstaddr=dict(line="any",
                                   platform="ios",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="any",
                                   addrgroup="",
                                   ipnet=IPv4Network("0.0.0.0/0"),
                                   prefix="0.0.0.0/0",
                                   subnet="0.0.0.0 0.0.0.0",
                                   wildcard="0.0.0.0 255.255.255.255"),
                      dstport=dict(line="",
                                   platform="ios",
                                   note="",
                                   protocol="",
                                   port_nr=False,
                                   items=[],
                                   operator="",
                                   ports=[],
                                   sport=""),
                      option=dict(line="",
                                  platform="ios",
                                  note="",
                                  flags=[],
                                  logs=[])),
             ],
             group_by="=== ",
             note="",
             protocol_nr=False,
             port_nr=False,
             sequence=0),
    ],
    group_by="=== ",
    note="",
    max_ncwb=16,
    indent="  ",
    protocol_nr=False,
    port_nr=False,
)
# noinspection DuplicatedCode
IOS_ACE_STD_D = dict(
    line="ip access-list standard ACL_NAME2\n"
         "  remark === C-11\n"
         "  permit host 10.0.0.1\n"
         "  remark === C-12\n"
         "  permit 10.0.0.0 0.0.0.3",
    platform="ios",
    type="standard",
    input=["interface Ethernet1/2"],
    output=["interface Ethernet1/2"],
    note="",
    max_ncwb=16,
    indent="  ",
    protocol_nr=False,
    port_nr=False,
    name="ACL_NAME2",
    group_by="",
    items=[
        dict(line="remark === C-11",
             platform="ios",
             note="",
             sequence=0,
             action="remark",
             text="=== C-11"),
        dict(line="permit host 10.0.0.1",
             platform="ios",
             type="standard",
             note="",
             max_ncwb=16,
             protocol_nr=False,
             port_nr=False,
             sequence=0,
             action="permit",
             protocol=dict(line="ip",
                           platform="ios",
                           note="",
                           protocol_nr=False,
                           has_port=False,
                           name="ip",
                           number=0),
             srcaddr=dict(line="host 10.0.0.1",
                          platform="ios",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="host",
                          addrgroup="",
                          ipnet=IPv4Network("10.0.0.1/32"),
                          prefix="10.0.0.1/32",
                          subnet="10.0.0.1 255.255.255.255",
                          wildcard="10.0.0.1 0.0.0.0"),
             srcport=dict(line="",
                          platform="ios",
                          note="",
                          protocol="",
                          port_nr=False,
                          items=[],
                          operator="",
                          ports=[],
                          sport=""),
             dstaddr=dict(line="any",
                          platform="ios",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="any",
                          addrgroup="",
                          ipnet=IPv4Network("0.0.0.0/0"),
                          prefix="0.0.0.0/0",
                          subnet="0.0.0.0 0.0.0.0",
                          wildcard="0.0.0.0 255.255.255.255"),
             dstport=dict(line="",
                          platform="ios",
                          note="",
                          protocol="",
                          port_nr=False,
                          items=[],
                          operator="",
                          ports=[],
                          sport=""),
             option=dict(line="", platform="ios", note="", flags=[], logs=[])),
        dict(line="remark === C-12",
             platform="ios",
             note="",
             sequence=0,
             action="remark",
             text="=== C-12"),
        dict(line="permit 10.0.0.0 0.0.0.3",
             platform="ios",
             type="standard",
             note="",
             max_ncwb=16,
             protocol_nr=False,
             port_nr=False,
             sequence=0,
             action="permit",
             protocol=dict(line="ip",
                           platform="ios",
                           note="",
                           protocol_nr=False,
                           has_port=False,
                           name="ip",
                           number=0),
             srcaddr=dict(line="10.0.0.0 0.0.0.3",
                          platform="ios",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="wildcard",
                          addrgroup="",
                          ipnet=IPv4Network("10.0.0.0/30"),
                          prefix="10.0.0.0/30",
                          subnet="10.0.0.0 255.255.255.252",
                          wildcard="10.0.0.0 0.0.0.3"),
             srcport=dict(line="",
                          platform="ios",
                          note="",
                          protocol="",
                          port_nr=False,
                          items=[],
                          operator="",
                          ports=[],
                          sport=""),
             dstaddr=dict(line="any",
                          platform="ios",
                          items=[],
                          note="",
                          max_ncwb=16,
                          type="any",
                          addrgroup="",
                          ipnet=IPv4Network("0.0.0.0/0"),
                          prefix="0.0.0.0/0",
                          subnet="0.0.0.0 0.0.0.0",
                          wildcard="0.0.0.0 255.255.255.255"),
             dstport=dict(line="",
                          platform="ios",
                          note="",
                          protocol="",
                          port_nr=False,
                          items=[],
                          operator="",
                          ports=[],
                          sport=""),
             option=dict(line="", platform="ios", note="", flags=[], logs=[]))
    ]
)
# noinspection DuplicatedCode
IOS_ACEG_STD_D = dict(
    line="ip access-list standard ACL_NAME2\n"
         "  remark === C-11\n"
         "  permit host 10.0.0.1\n"
         "  remark === C-12\n"
         "  permit 10.0.0.0 0.0.0.3",
    platform="ios",
    type="standard",
    input=["interface Ethernet1/2"],
    output=["interface Ethernet1/2"],
    note="",
    max_ncwb=16,
    indent="  ",
    protocol_nr=False,
    port_nr=False,
    name="ACL_NAME2",
    group_by="=== ",
    items=[
        dict(line="remark === C-11\npermit host 10.0.0.1",
             platform="ios",
             type="standard",
             name="=== C-11",
             group_by="=== ",
             items=[
                 dict(line="remark === C-11",
                      platform="ios",
                      note="",
                      sequence=0,
                      action="remark",
                      text="=== C-11"),
                 dict(line="permit host 10.0.0.1",
                      platform="ios",
                      type="standard",
                      note="",
                      max_ncwb=16,
                      protocol_nr=False,
                      port_nr=False,
                      sequence=0,
                      action="permit",
                      protocol=dict(line="ip",
                                    platform="ios",
                                    note="",
                                    protocol_nr=False,
                                    has_port=False,
                                    name="ip",
                                    number=0),
                      srcaddr=dict(line="host 10.0.0.1",
                                   platform="ios",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="host",
                                   addrgroup="",
                                   ipnet=IPv4Network("10.0.0.1/32"),
                                   prefix="10.0.0.1/32",
                                   subnet="10.0.0.1 255.255.255.255",
                                   wildcard="10.0.0.1 0.0.0.0"),
                      srcport=dict(line="",
                                   platform="ios",
                                   note="",
                                   protocol="",
                                   port_nr=False,
                                   items=[],
                                   operator="",
                                   ports=[],
                                   sport=""),
                      dstaddr=dict(line="any",
                                   platform="ios",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="any",
                                   addrgroup="",
                                   ipnet=IPv4Network("0.0.0.0/0"),
                                   prefix="0.0.0.0/0",
                                   subnet="0.0.0.0 0.0.0.0",
                                   wildcard="0.0.0.0 255.255.255.255"),
                      dstport=dict(line="",
                                   platform="ios",
                                   note="",
                                   protocol="",
                                   port_nr=False,
                                   items=[],
                                   operator="",
                                   ports=[],
                                   sport=""),
                      option=dict(line="", platform="ios", note="", flags=[], logs=[]))],
             note="",
             protocol_nr=False,
             port_nr=False,
             sequence=0),
        dict(line="remark === C-12\npermit 10.0.0.0 0.0.0.3",
             platform="ios",
             type="standard",
             name="=== C-12",
             group_by="=== ",
             items=[
                 dict(line="remark === C-12",
                      platform="ios",
                      note="",
                      sequence=0,
                      action="remark",
                      text="=== C-12"),
                 dict(line="permit 10.0.0.0 0.0.0.3",
                      platform="ios",
                      type="standard",
                      note="",
                      max_ncwb=16,
                      protocol_nr=False,
                      port_nr=False,
                      sequence=0,
                      action="permit",
                      protocol=dict(line="ip",
                                    platform="ios",
                                    note="",
                                    protocol_nr=False,
                                    has_port=False,
                                    name="ip",
                                    number=0),
                      srcaddr=dict(line="10.0.0.0 0.0.0.3",
                                   platform="ios",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="wildcard",
                                   addrgroup="",
                                   ipnet=IPv4Network("10.0.0.0/30"),
                                   prefix="10.0.0.0/30",
                                   subnet="10.0.0.0 255.255.255.252",
                                   wildcard="10.0.0.0 0.0.0.3"),
                      srcport=dict(line="",
                                   platform="ios",
                                   note="",
                                   protocol="",
                                   port_nr=False,
                                   items=[],
                                   operator="",
                                   ports=[],
                                   sport=""),
                      dstaddr=dict(line="any",
                                   platform="ios",
                                   items=[],
                                   note="",
                                   max_ncwb=16,
                                   type="any",
                                   addrgroup="",
                                   ipnet=IPv4Network("0.0.0.0/0"),
                                   prefix="0.0.0.0/0",
                                   subnet="0.0.0.0 0.0.0.0",
                                   wildcard="0.0.0.0 255.255.255.255"),
                      dstport=dict(line="",
                                   platform="ios",
                                   note="",
                                   protocol="",
                                   port_nr=False,
                                   items=[],
                                   operator="",
                                   ports=[],
                                   sport=""),
                      option=dict(line="", platform="ios", note="", flags=[], logs=[])),
             ],
             note="",
             protocol_nr=False,
             port_nr=False,
             sequence=0)
    ]
)


# noinspection DuplicatedCode
class Test(unittest.TestCase):
    """functions.py"""

    def test_valid__acls(self):
        """functions.acls()"""
        for kwargs, req_d in [
            (dict(config=CNX_ACL_EXT_CFG, platform="nxos"), CNX_ACE_EXT_D),
            (dict(config=CNX_ACL_EXT_CFG, platform="nxos", group_by="=== "), CNX_ACEG_EXT_D),
            (dict(config=IOS_ACL_EXT_CFG, platform="ios"), IOS_ACE_EXT_D),
            (dict(config=IOS_ACL_EXT_CFG, platform="ios", group_by="=== "), IOS_ACEG_EXT_D),
            (dict(config=IOS_ACL_STD_CFG, platform="ios"), IOS_ACE_STD_D),
            (dict(config=IOS_ACL_STD_CFG, platform="ios", group_by="=== "), IOS_ACEG_STD_D),
            (dict(config=IOS_ACL_STD_CFG, names=["typo"]), {}),
            # names
            (dict(config=IOS_ACL_STD_CFG, names=None), IOS_ACE_STD_D),
            (dict(config=IOS_ACL_STD_CFG, names=[]), {}),
            (dict(config=IOS_ACL_STD_CFG, names=["ACL_NAME2"]), IOS_ACE_STD_D),
        ]:
            acls = f.acls(**kwargs)
            if req_d:
                self.assertEqual(len(acls), 1, msg="1 acl expected")
                acl_o = acls[0]
                result = acl_o.data()
                diff = list(dictdiffer.diff(first=result, second=req_d))
                self.assertEqual(diff, [], msg=f"{kwargs=}")
            else:
                self.assertEqual(len(acls), 0, msg="1 acl expected")

    def test_valid__aces(self):
        """functions.aces()"""
        aces = f"{REMARK}\n{PERMIT_IP}\n{DENY_IP}"
        dirty = f"  \n  {PERMIT_IP}\ntext\n\t{REMARK}\t\ntext"
        acegs = f"remark = C1\n{PERMIT_IP}\nremark = C2\n{DENY_IP}"
        acegs_req = ["remark = C1\npermit ip any any", "remark = C2\ndeny ip any any"]
        for kwargs, req in [
            (dict(config=aces, platform="nxos"), [REMARK, PERMIT_IP, DENY_IP]),
            (dict(config=dirty, platform="nxos"), [PERMIT_IP, REMARK]),
            (dict(config=acegs, platform="nxos", group_by="= "), acegs_req),
        ]:
            aces = f.aces(**kwargs)
            result = [o.line for o in aces]
            self.assertEqual(result, req, msg=f"{kwargs=}")

    def test_valid__addrgroups(self):
        """functions.addrgroups()"""
        for kwargs, req_d in [
            (dict(config=IOS_ADDGR_CFG, platform="ios"), IOS_ADDGR_D),
        ]:
            aces = f.addrgroups(**kwargs)
            result = [o.data() for o in aces]
            diff = list(dictdiffer.diff(first=result, second=req_d))
            self.assertEqual(diff, [], msg=f"{kwargs=}")

    def test_valid__range_protocol(self):
        """functions.range_protocol()"""
        for kwargs, req in [
            ({}, []),
            (dict(protocols="0"), ["permit ip any any"]),
            (dict(protocols="1", line="deny 1 any any", protocol_nr=False), ["deny icmp any any"]),
            (dict(protocols="2", line="permit tcp any eq 1 any eq 2"), ["permit igmp any any"]),
            (dict(protocols="0-1,6", line="permit ip any any", protocol_nr=False),
             ["permit ip any any",
              "permit icmp any any",
              "permit tcp any any"]),
            (dict(protocols="1-2,6", line="permit ip host 10.0.0.1 any", protocol_nr=True),
             ["permit 1 host 10.0.0.1 any",
              "permit 2 host 10.0.0.1 any",
              "permit 6 host 10.0.0.1 any"]),
        ]:
            result = f.range_protocols(**kwargs)
            self.assertEqual(result, req, msg=f"{kwargs=}")

    def test_valid__range_ports(self):
        """functions.range_ports()"""
        deny_udp1 = ["deny udp host 10.0.0.1 eq 1 any"]
        src_tcp_eq = ["permit tcp any eq ftp-data any", "permit tcp any eq ftp any"]
        src_tcp_eq_ = ["permit tcp any eq 20 any", "permit tcp any eq 21 any"]
        src_tcp_gt = ["permit tcp any gt 20 any", "permit tcp any gt 21 any"]
        src_tcp_lt = ["permit tcp any lt 20 any", "permit tcp any lt 21 any"]
        src_udp_neq = ["permit udp any neq 67 any", "permit udp any neq 68 any"]
        dst_tcp_eq = ["permit tcp any any eq ftp-data", "permit tcp any any eq ftp"]
        dst_tcp_eq_ = ["permit tcp any any eq 20", "permit tcp any any eq 21"]
        dst_tcp_gt = ["permit tcp any any gt 20", "permit tcp any any gt 21"]
        dst_tcp_lt = ["permit tcp any any lt 20", "permit tcp any any lt 21"]
        dst_udp_neq = ["permit udp any any neq 67", "permit udp any any neq 68"]
        combo = ["permit tcp any eq 20 any", "permit tcp any eq 21 any",
                 "permit tcp any any eq 22", "permit tcp any any eq 23"]
        for kwargs, req in [
            ({}, []),
            # src
            (dict(srcports=""), []),
            (dict(srcports="1", line="deny udp host 10.0.0.1 any"), deny_udp1),
            (dict(srcports="20-21", port_nr=False), src_tcp_eq),
            (dict(srcports="20-21", port_nr=True), src_tcp_eq_),
            (dict(srcports="20-21", line="permit tcp any gt 1 any", port_nr=True), src_tcp_gt),
            (dict(srcports="20-21", line="permit tcp any lt 1 any", port_nr=True), src_tcp_lt),
            (dict(srcports="67,68", line="permit udp any neq 1 any", port_nr=True), src_udp_neq),
            # dst
            (dict(dstports=""), []),
            (dict(dstports="20,21", port_nr=False), dst_tcp_eq),
            (dict(dstports="20,21", port_nr=True), dst_tcp_eq_),
            (dict(dstports="20-21", line="permit tcp any any gt 1", port_nr=True), dst_tcp_gt),
            (dict(dstports="20-21", line="permit tcp any any lt 1", port_nr=True), dst_tcp_lt),
            (dict(dstports="67,68", line="permit udp any any neq 1", port_nr=True), dst_udp_neq),
            # combo
            (dict(srcports="20-21", dstports="22-23", port_nr=True), combo),
        ]:
            result = f.range_ports(**kwargs)
            self.assertEqual(result, req, msg=f"{kwargs=}")


if __name__ == "__main__":
    unittest.main()
